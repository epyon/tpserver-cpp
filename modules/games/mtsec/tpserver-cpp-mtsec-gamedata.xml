<?xml version="1.0" ?>
<components>

<comp>
    <name>Scout Hull</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>The scout hull, fitted out with everything a scout needs</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType._num-components design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) (* 100 1000000))]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 2)]]></Armor>
        <_num-components><![CDATA[(lambda (design) 1)]]></_num-components>
    </propertylist>
</comp>


<comp>
    <name>Battle Scout Hull</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>The battle scout hull</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-hulls design) 1) (if (< (designType.num-baytypes design) 2) (cons #t "") (cons #f "A ship can only have one type of missile bay")) (cons #f "A ship can only use one hull!")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) (* 75 1000000))]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 5)]]></Armor>
        <!--  To determine the total firepower of the ship, we multiply the 
              firepower of an individual missile bay by how many missile bays 
              the ship has. 
              To determine how many missile bays the ship can have, we divide 
              the ship size by the missile size. -->
        <Firepower><![CDATA[(lambda (design) (* (floor (/ 88 (designType.MissileSize design))) (designType.MissileFirepower design)))]]></Firepower>
        <HitPoints><![CDATA[(lambda (design) 100)]]></HitPoints>
        <num-ammo><![CDATA[(lambda (design) 0)]]></num-ammo>
        <num-hulls><![CDATA[(lambda (design) 1)]]></num-hulls>
    </propertylist>
</comp>



<comp>
    <name>Cerium 3 Explosives</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>A huge but extremely explosive sub-nuclear particle</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <AmmoSize><![CDATA[(lambda (design) 3)]]></AmmoSize>
        <AmmoExplosiveness><![CDATA[(lambda (design) 8)]]></AmmoExplosiveness>
        <!--  Ammo cost is (cost/size) * size. 
              This is for one 'unit' of explosive - if a missile can fit two units, 
              the cost for the missile bay is twice the AmmoCost property -->
        <AmmoCost><![CDATA[(lambda (design) 14)]]></AmmoCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
    </propertylist>
</comp>



<comp>
    <name>Cerium 6 Explosives</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>A huge but extremely explosive sub-nuclear particle</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <AmmoSize><![CDATA[(lambda (design) 6)]]></AmmoSize>
        <AmmoExplosiveness><![CDATA[(lambda (design) 11)]]></AmmoExplosiveness>
        <!--  Ammo cost is (cost/size) * size. 
              This is for one 'unit' of explosive - if a missile can fit two units, 
              the cost for the missile bay is twice the AmmoCost property -->
        <AmmoCost><![CDATA[(lambda (design) 36)]]></AmmoCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
    </propertylist>
</comp>



<comp>
    <name>Cerium 12 Explosives</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>A huge but extremely explosive sub-nuclear particle</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <AmmoSize><![CDATA[(lambda (design) 12)]]></AmmoSize>
        <AmmoExplosiveness><![CDATA[(lambda (design) 55)]]></AmmoExplosiveness>
        <!--  Ammo cost is (cost/size) * size. 
              This is for one 'unit' of explosive - if a missile can fit two units, 
              the cost for the missile bay is twice the AmmoCost property -->
        <AmmoCost><![CDATA[(lambda (design) 156)]]></AmmoCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
    </propertylist>
</comp>



<comp>
    <name>Uranium Explosives</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>Most basic nuclear explosive</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <AmmoSize><![CDATA[(lambda (design) 4)]]></AmmoSize>
        <AmmoExplosiveness><![CDATA[(lambda (design) 1)]]></AmmoExplosiveness>
        <!--  Ammo cost is (cost/size) * size. 
              This is for one 'unit' of explosive - if a missile can fit two units, 
              the cost for the missile bay is twice the AmmoCost property -->
        <AmmoCost><![CDATA[(lambda (design) 4)]]></AmmoCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
    </propertylist>
</comp>



<comp>
    <name>Antiparticle Explosives</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>An extremely expensive but hugely explosive particle and anit-particle explosive</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <AmmoSize><![CDATA[(lambda (design) 0.8)]]></AmmoSize>
        <AmmoExplosiveness><![CDATA[(lambda (design) 16)]]></AmmoExplosiveness>
        <!--  Ammo cost is (cost/size) * size. 
              This is for one 'unit' of explosive - if a missile can fit two units, 
              the cost for the missile bay is twice the AmmoCost property -->
        <AmmoCost><![CDATA[(lambda (design) 64)]]></AmmoCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
    </propertylist>
</comp>



<comp>
    <name>Antimatter Explosives</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>An even more extremely expensive but insanely explosive antimatter-matter explosive</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <AmmoSize><![CDATA[(lambda (design) 0.8)]]></AmmoSize>
        <AmmoExplosiveness><![CDATA[(lambda (design) 16)]]></AmmoExplosiveness>
        <!--  Ammo cost is (cost/size) * size. 
              This is for one 'unit' of explosive - if a missile can fit two units, 
              the cost for the missile bay is twice the AmmoCost property -->
        <AmmoCost><![CDATA[(lambda (design) 64)]]></AmmoCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
    </propertylist>
</comp>



<comp>
    <name>Thorium Explosives</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>A significantly cheaper but less explosive nuclear explosive</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <AmmoSize><![CDATA[(lambda (design) 4)]]></AmmoSize>
        <AmmoExplosiveness><![CDATA[(lambda (design) 0.5)]]></AmmoExplosiveness>
        <!--  Ammo cost is (cost/size) * size. 
              This is for one 'unit' of explosive - if a missile can fit two units, 
              the cost for the missile bay is twice the AmmoCost property -->
        <AmmoCost><![CDATA[(lambda (design) 1)]]></AmmoCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
    </propertylist>
</comp>



<comp>
    <name>Alpha Missile Tube</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>An alpha missile tube, capable of firing one alpha missile per combat round</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (if (< (designType.AmmoSize design) 4) (cons #t "") (cons #f "Explosive is too large foralpha missiles")) (cons #f "Missiles can only handle one type of explosive")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <MissileSize><![CDATA[(lambda (design) 3)]]></MissileSize>
        <!--  To get the missile's firepower, we multiply the explosiveness of 
              the material by how much material can fit in the warhead. 
              How much material can fit in the warhead is the missile size divided 
              by the ammo size. -->
        <MissileFirepower><![CDATA[(lambda (design) (* (floor (/ 3 (designType.AmmoSize design))) (designType.AmmoExplosiveness design)))]]></MissileFirepower>
        <!--  Missile bay Cost is ammo cost times how much material can fit in the warhead -->
        <MissileCost><![CDATA[(lambda (design) (* (floor (/ 3 (designType.AmmoSize design))) (designType.AmmoCost design)))]]></MissileCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-baytypes><![CDATA[(lambda (design) 1)]]></num-baytypes>
    </propertylist>
</comp>



<comp>
    <name>Beta Missile Tube</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>A beta missile tube, capable of firing one beta missile per combat round</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (if (< (designType.AmmoSize design) 7) (cons #t "") (cons #f "Explosive is too large forbeta missiles")) (cons #f "Missiles can only handle one type of explosive")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <MissileSize><![CDATA[(lambda (design) 6)]]></MissileSize>
        <!--  To get the missile's firepower, we multiply the explosiveness of 
              the material by how much material can fit in the warhead. 
              How much material can fit in the warhead is the missile size divided 
              by the ammo size. -->
        <MissileFirepower><![CDATA[(lambda (design) (* (floor (/ 6 (designType.AmmoSize design))) (designType.AmmoExplosiveness design)))]]></MissileFirepower>
        <!--  Missile bay Cost is ammo cost times how much material can fit in the warhead -->
        <MissileCost><![CDATA[(lambda (design) (* (floor (/ 6 (designType.AmmoSize design))) (designType.AmmoCost design)))]]></MissileCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-baytypes><![CDATA[(lambda (design) 1)]]></num-baytypes>
    </propertylist>
</comp>



<comp>
    <name>Gamma Missile Tube</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>A gamma missile tube, capable of firing one gamma missile per combat round</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (if (< (designType.AmmoSize design) 9) (cons #t "") (cons #f "Explosive is too large forgamma missiles")) (cons #f "Missiles can only handle one type of explosive")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <MissileSize><![CDATA[(lambda (design) 8)]]></MissileSize>
        <!--  To get the missile's firepower, we multiply the explosiveness of 
              the material by how much material can fit in the warhead. 
              How much material can fit in the warhead is the missile size divided 
              by the ammo size. -->
        <MissileFirepower><![CDATA[(lambda (design) (* (floor (/ 8 (designType.AmmoSize design))) (designType.AmmoExplosiveness design)))]]></MissileFirepower>
        <!--  Missile bay Cost is ammo cost times how much material can fit in the warhead -->
        <MissileCost><![CDATA[(lambda (design) (* (floor (/ 8 (designType.AmmoSize design))) (designType.AmmoCost design)))]]></MissileCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-baytypes><![CDATA[(lambda (design) 1)]]></num-baytypes>
    </propertylist>
</comp>

<comp>
    <name>Delta Missile Tube</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>A delta missile tube, capable of firing one delta missile per combat round</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (if (< (designType.AmmoSize design) 13) (cons #t "") (cons #f "Explosive is too large for gamma missiles")) (cons #f "Missiles can only handle one type of explosive")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
        <MissileSize><![CDATA[(lambda (design) 12)]]></MissileSize>
        <!--  To get the missile's firepower, we multiply the explosiveness of 
                the material by how much material can fit in the warhead. 
                How much material can fit in the warhead is the missile size divided 
                by the ammo size. -->
        <MissileFirepower><![CDATA[(lambda (design) (* (floor (/ 12 (designType.AmmoSize design))) (designType.AmmoExplosiveness design)))]]></MissileFirepower>
        <!--  Missile bay Cost is ammo cost times how much material can fit in the warhead -->
        <MissileCost><![CDATA[(lambda (design) (* (floor (/ 12 (designType.AmmoSize design))) (designType.AmmoCost design)))]]></MissileCost>
        <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
        <num-baytypes><![CDATA[(lambda (design) 1)]]></num-baytypes>
    </propertylist>
</comp>

<comp>
    <name>Epsilon Missile Tube</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>An epsilon missile tube, capable of firing one epsilon missile per combat round</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType.num-ammo design) 1) (if (< (designType.AmmoSize design) 25) (cons #t "") (cons #f "Explosive is too large for gamma missiles")) (cons #f "Missiles can only handle one type of explosive")))]]></tpclRequirementsFunction>
        <propertylist>
            <Speed><![CDATA[(lambda (design) 0)]]></Speed>
            <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
            <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
            <Armor><![CDATA[(lambda (design) 0)]]></Armor>
            <MissileSize><![CDATA[(lambda (design) 24)]]></MissileSize>
            <!--  To get the missile's firepower, we multiply the explosiveness of 
                  the material by how much material can fit in the warhead. 
                  How much material can fit in the warhead is the missile size divided 
                  by the ammo size. -->
            <MissileFirepower><![CDATA[(lambda (design) (* (floor (/ 25 (designType.AmmoSize design))) (designType.AmmoExplosiveness design)))]]></MissileFirepower>
            <!--  Missile bay Cost is ammo cost times how much material can fit in the warhead -->
            <MissileCost><![CDATA[(lambda (design) (* (floor (/ 25 (designType.AmmoSize design))) (designType.AmmoCost design)))]]></MissileCost>
            <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
            <num-baytypes><![CDATA[(lambda (design) 1)]]></num-baytypes>
        </propertylist>
</comp>

<comp>
    <name>Armor</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>Armor reduces the damage taken by 0.1%</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType._num-components design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
        <propertylist>
            <Speed><![CDATA[(lambda (design) 0)]]></Speed>
            <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
            <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
            <Armor><![CDATA[(lambda (design) 10)]]></Armor>
        </propertylist>
</comp>

<comp>
    <name>Colonisation Module</name>
    <ComponentIDName>Ships</ComponentIDName>
    <description>Allows the ship to colonise a planet.</description>
    <tpclRequirementsFunction><![CDATA[(lambda (design) (if (= (designType._num-components design) 1) (cons #t "") (cons #f "This is a complete component, nothing else can be included")))]]></tpclRequirementsFunction>
    <propertylist>
        <Speed><![CDATA[(lambda (design) 0)]]></Speed>
        <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
        <Colonise><![CDATA[(lambda (design) 1)]]></Colonise>
        <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    </propertylist>
</comp>

</components>
<properties>
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>_num-components</name>
        <displayName>Number of Components</displayName>
        <description>The total number of components in the design</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits)(let ((n (apply + bits)))(cons n (string-append (number->string n) " components"))))]]></tpclDisplayFunction>
        <tpclRequirementsFunction>(lambda (design) (cons #t ""))</tpclRequirementsFunction>
    </prop>

    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>Speed</name>
        <displayName>Speed</displayName>
        <description>The number of units the ship can move each turn</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (string-append (number->string (/ n 1000000)) " mega-units")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>AmmoCost</name>
        <displayName>Explosive Unit Cost</displayName>
        <description>The relative expensiveness of the explosive</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (string-append (number->string n) " credits")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>AmmoExplosiveness</name>
        <displayName>Unit Explosive Punch</displayName>
        <description>The explosiveness of a unit of the explosive used in the weapons of the ship</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (string-append (number->string n) " hit points")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>AmmoSize</name>
        <displayName>Explosive Density</displayName>
        <description>The relative size of a unit of the explosive used in the weapons of the ship</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (number->string n))))]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="2"/>
        <name>Firepower</name>
        <displayName>Firepower</displayName>
        <description>How much damage the weapons of the ship can do in a single round</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (string-append (number->string n) " hit points")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="1"/>
        <name>MissileCost</name>
        <displayName>MissileCost</displayName>
        <description>The relative cost of a missile</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (number->string n))))]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="1"/>
        <name>MissileFirepower</name>
        <displayName>Missile Firepower</displayName>
        <description>How much damage a missile can do</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (string-append (number->string n) " hit points")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="1"/>
        <name>MissileSize</name>
        <displayName>MissileSize</displayName>
        <description>The relative size of a missile</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (number->string n))))]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>StartingHitPoints</name>
        <displayName>Initial Hit Points</displayName>
        <description>How much damage the ship can take before being destroyed</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (string-append (number->string n) " hit points")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>BuildTime</name>
        <displayName>Build Time</displayName>
        <description>The number of turns to build this</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (string-append (number->string n) " turns")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>Armor</name>
        <displayName>Armor</displayName>
        <description>The amount of armor on the ship</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (string-append (number->string n) " HP")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>HitPoints</name>
        <displayName>Hit Points</displayName>
        <description>The number of HP this ship has</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (string-append (number->string n) " HP")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>Colonise</name>
        <displayName>Can Colonise Planets</displayName>
        <description>Can the ship colonise planets</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits) (let ((n (apply + bits))) (cons n (if (= n 1) "Yes" "No")) ) )]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>num-ammo</name>
        <displayName>Number of missile and torpedo warhead types</displayName>
        <description>The number of missile and torpedo warhead types in the design</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits)(let ((n (apply + bits)))(cons n (string-append (number->string n) " explosive types"))))]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>num-baytypes</name>
        <displayName>Number of missile or torpedo types</displayName>
        <description>The number of missile or torpedo types in the design</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits)(let ((n (apply + bits)))(cons n (string-append (number->string n) " types"))))]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
    <prop>
        <PropertyIDName>Ships</PropertyIDName>
        <rank value="0"/>
        <name>num-hulls</name>
        <displayName>Number of hulls</displayName>
        <description>The number of hulls in the design</description>
        <tpclDisplayFunction><![CDATA[(lambda (design bits)(let ((n (apply + bits)))(cons n (string-append (number->string n) " hull"))))]]></tpclDisplayFunction>
        <tpclRequirementsFunction><![CDATA[(lambda (design) (cons #t ""))]]></tpclRequirementsFunction>
    </prop>
    
    
</properties>
