<components>

<comp>
    <name>ScoutHull</name>
    <description>The scout hull, fitted out with everything a scout needs</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType._num-components design) 1) 
            (cons #t \\) 
            (cons #f \This is a complete component, nothing else can be included\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) (* 100 1000000))]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 2)]]></Armor>
    <_num-components><![CDATA[(lambda (design) 1)]]></_num-components>
</comp>


<comp>
    <name>BattleScoutHull</name>
    <description>The battle scout hull</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-hulls design) 1) 
                (if (< (designType.num-baytypes design) 2) 
                    (cons #t \\) 
                    (cons #f \A ship can only have one type of missile bay\)) 
                (cons #f \A ship can only use one hull!\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) (* 75 1000000))]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 5)]]></Armor>
    <!--  To determine the total firepower of the ship, we multiply the -->
    <!--  firepower of an individual missile bay by how many missile bays -->
    <!--  the ship has. -->
    <!--  To determine how many missile bays the ship can have, we divide -->
    <!--  the ship size by the missile size. -->
    <Firepower><![CDATA[(lambda (design) (* (floor (/ 88 (designType.MissileSize design))) (designType.MissileFirepower design))]]></Firepower>
    <HitPoints><![CDATA[(lambda (design) 100)]]></HitPoints>
    <num-ammo><![CDATA[(lambda (design) 0)]]></num-ammo>
    <num-hulls><![CDATA[(lambda (design) 1)]]></num-hulls>

</comp>



<comp>
    <name>Cerium3Explosives</name>
    <description>A huge but extremely explosive sub-nuclear particle</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
            (cons #t \\) 
            (cons #f \This is a complete component, nothing else can be included\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <AmmoSize><![CDATA[(lambda (design) 3)]]></AmmoSize>
    <AmmoExplosiveness><![CDATA[(lambda (design) 8)]]></AmmoExplosiveness>
    <!--  Ammo cost is (cost/size) * size. -->
    <!--  This is for one 'unit' of explosive - if a missile can fit two units, -->
    <!--  the cost for the missile bay is twice the AmmoCost property -->
    <AmmoCost><![CDATA[(lambda (design) 14)]]></AmmoCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
</comp>



<comp>
    <name>Cerium6Explosives</name>
    <description>A huge but extremely explosive sub-nuclear particle</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
            (cons #t \\) 
            (cons #f \This is a complete component, nothing else can be included\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <AmmoSize><![CDATA[(lambda (design) 6)]]></AmmoSize>
    <AmmoExplosiveness><![CDATA[(lambda (design) 11)]]></AmmoExplosiveness>
    <!--  Ammo cost is (cost/size) * size. -->
    <!--  This is for one 'unit' of explosive - if a missile can fit two units, -->
    <!--  the cost for the missile bay is twice the AmmoCost property -->
    <AmmoCost><![CDATA[(lambda (design) 36)]]></AmmoCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
</comp>



<comp>
    <name>Cerium12Explosives</name>
    <description>A huge but extremely explosive sub-nuclear particle</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
            (cons #t \\) 
            (cons #f \This is a complete component, nothing else can be included\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <AmmoSize><![CDATA[(lambda (design) 12)]]></AmmoSize>
    <AmmoExplosiveness><![CDATA[(lambda (design) 55)]]></AmmoExplosiveness>
    <!--  Ammo cost is (cost/size) * size. -->
    <!--  This is for one 'unit' of explosive - if a missile can fit two units, -->
    <!--  the cost for the missile bay is twice the AmmoCost property -->
    <AmmoCost><![CDATA[(lambda (design) 156)]]></AmmoCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
</comp>



<comp>
    <name>UraniumExplosives</name>
    <description>Most basic nuclear explosive</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
            (cons #t \\) 
            (cons #f \This is a complete component, nothing else can be included\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <AmmoSize><![CDATA[(lambda (design) 4)]]></AmmoSize>
    <AmmoExplosiveness><![CDATA[(lambda (design) 1)]]></AmmoExplosiveness>
    <!--  Ammo cost is (cost/size) * size. -->
    <!--  This is for one 'unit' of explosive - if a missile can fit two units, -->
    <!--  the cost for the missile bay is twice the AmmoCost property -->
    <AmmoCost><![CDATA[(lambda (design) 4)]]></AmmoCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
</comp>



<comp>
    <name>AntiparticleExplosives</name>
    <description>An extremely expensive but hugely explosive particle and anit-particle explosive</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
            (cons #t \\) 
            (cons #f \This is a complete component, nothing else can be included\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <AmmoSize><![CDATA[(lambda (design) 0.8)]]></AmmoSize>
    <AmmoExplosiveness><![CDATA[(lambda (design) 16)]]></AmmoExplosiveness>
    <!--  Ammo cost is (cost/size) * size. -->
    <!--  This is for one 'unit' of explosive - if a missile can fit two units, -->
    <!--  the cost for the missile bay is twice the AmmoCost property -->
    <AmmoCost><![CDATA[(lambda (design) 64)]]></AmmoCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
</comp>



<comp>
    <name>AntimatterExplosives</name>
    <description>An even more extremely expensive but insanely explosive antimatter-matter explosive</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
            (cons #t \\) 
            (cons #f \This is a complete component, nothing else can be included\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <AmmoSize><![CDATA[(lambda (design) 0.8)]]></AmmoSize>
    <AmmoExplosiveness><![CDATA[(lambda (design) 16)]]></AmmoExplosiveness>
    <!--  Ammo cost is (cost/size) * size. -->
    <!--  This is for one 'unit' of explosive - if a missile can fit two units, -->
    <!--  the cost for the missile bay is twice the AmmoCost property -->
    <AmmoCost><![CDATA[(lambda (design) 64)]]></AmmoCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
</comp>



<comp>
    <name>ThoriumExplosives</name>
    <description>A significantly cheaper but less explosive nuclear explosive</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
            (cons #t \\) 
            (cons #f \This is a complete component, nothing else can be included\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <AmmoSize><![CDATA[(lambda (design) 4)]]></AmmoSize>
    <AmmoExplosiveness><![CDATA[(lambda (design) 0.5)]]></AmmoExplosiveness>
    <!--  Ammo cost is (cost/size) * size. -->
    <!--  This is for one 'unit' of explosive - if a missile can fit two units, -->
    <!--  the cost for the missile bay is twice the AmmoCost property -->
    <AmmoCost><![CDATA[(lambda (design) 1)]]></AmmoCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-ammo><![CDATA[(lambda (design) 1)]]></num-ammo>
</comp>



<comp>
    <name>AlphaMissileBay</name>
    <description>An alpha missile bay, capable of firing one alpha missile per combat round</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
                (if (< (designType.AmmoSize design) 4) 
                    (cons #t \\) 
                    (cons #f \Explosive is too large for alpha missiles\)) 
                (cons #f \Missiles can only handle one type of explosive\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <MissileSize><![CDATA[(lambda (design) 3)]]></MissileSize>
    <!--  To get the missile's firepower, we multiply the explosiveness of -->
    <!--  the material by how much material can fit in the warhead. -->
    <!--  How much material can fit in the warhead is the missile size divided -->
    <!--  by the ammo size. -->
    <MissileFirepower><![CDATA[(lambda (design)(* (floor (/ 3 (designType.AmmoSize design))) (designType.AmmoExplosiveness design))]]></MissileFirepower>
    <!--  Missile bay Cost is ammo cost times how much material can fit in the warhead -->
    <MissileCost><![CDATA[(lambda (design) (* (floor (/ 3 (designType.AmmoSize design))) (designType.AmmoCost design))]]></MissileCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-baytypes><![CDATA[(lambda (design) 1)]]></num-baytypes>
</comp>



<comp>
    <name>BetaMissileBay</name>
    <description>A beta missile bay, capable of firing one beta missile per combat round</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
                (if (< (designType.AmmoSize design) 7) 
                    (cons #t \\) 
                    (cons #f \Explosive is too large for beta missiles\)) 
                (cons #f \Missiles can only handle one type of explosive\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <MissileSize><![CDATA[(lambda (design) 6)]]></MissileSize>
    <!--  To get the missile's firepower, we multiply the explosiveness of -->
    <!--  the material by how much material can fit in the warhead. -->
    <!--  How much material can fit in the warhead is the missile size divided -->
    <!--  by the ammo size. -->
    <MissileFirepower><![CDATA[(lambda (design)(* (floor (/ 6 (designType.AmmoSize design))) (designType.AmmoExplosiveness design))]]></MissileFirepower>
    <!--  Missile bay Cost is ammo cost times how much material can fit in the warhead -->
    <MissileCost><![CDATA[(lambda (design)(* (floor (/ 6 (designType.AmmoSize design))) (designType.AmmoCost design))]]></MissileCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-baytypes><![CDATA[(lambda (design) 1)]]></num-baytypes>
</comp>



<comp>
    <name>GammaMissileBay</name>
    <description>A gamma missile bay, capable of firing one gamma missile per combat round</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
                (if (< (designType.AmmoSize design) 9) 
                    (cons #t \\) 
                    (cons #f \Explosive is too large for gamma missiles\)) 
                (cons #f \Missiles can only handle one type of explosive\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <MissileSize><![CDATA[(lambda (design) 8)]]></MissileSize>
    <!--  To get the missile's firepower, we multiply the explosiveness of -->
    <!--  the material by how much material can fit in the warhead. -->
    <!--  How much material can fit in the warhead is the missile size divided -->
    <!--  by the ammo size. -->
    <MissileFirepower><![CDATA[(lambda (design) (* (floor (/ 8 (designType.AmmoSize design))) (designType.AmmoExplosiveness design))]]></MissileFirepower>
    <!--  Missile bay Cost is ammo cost times how much material can fit in the warhead -->
    <MissileCost><![CDATA[(lambda (design) (* (floor (/ 8 (designType.AmmoSize design))) (designType.AmmoCost design))]]></MissileCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-baytypes><![CDATA[(lambda (design) 1)]]></num-baytypes>
</comp>



<comp>
    <name>DeltaMissileBay</name>
    <description>A delta missile bay, capable of firing one delta missile per combat round</description>
    <tpclRequirementsFunction><![CDATA[
        (lambda (design) 
            (if (= (designType.num-ammo design) 1) 
                (if (< (designType.AmmoSize design) 13) 
                    (cons #t \\) 
                    (cons #f \Explosive is too large for gamma missiles\)) 
                (cons #f \Missiles can only handle one type of explosive\)))]]>
    </tpclRequirementsFunction>
    <Speed><![CDATA[(lambda (design) 0)]]></Speed>
    <BuildTime><![CDATA[(lambda (design) 1)]]></BuildTime>
    <Colonise><![CDATA[(lambda (design) 0)]]></Colonise>
    <Armor><![CDATA[(lambda (design) 0)]]></Armor>
    <MissileSize><![CDATA[(lambda (design) 12)]]></MissileSize>
    <!--  To get the missile's firepower, we multiply the explosiveness of -->
    <!--  the material by how much material can fit in the warhead. -->
    <!--  How much material can fit in the warhead is the missile size divided -->
    <!--  by the ammo size. -->
    <MissileFirepower><![CDATA[(lambda (design) (* (floor (/ 12 (designType.AmmoSize design))) (designType.AmmoExplosiveness design))]]></MissileFirepower>
    <!--  Missile bay Cost is ammo cost times how much material can fit in the warhead -->
    <MissileCost><![CDATA[(lambda (design) (* (floor (/ 12 (designType.AmmoSize design))) (designType.AmmoCost design))]]></MissileCost>
    <StartingHitPoints><![CDATA[(lambda (design) 0)]]></StartingHitPoints>
    <num-baytypes><![CDATA[(lambda (design) 1)]]></num-baytypes>
</comp>

</components>